exceptions-2.scala:45: warning: This catches all Throwables. If this is really intended, use `case _ : Throwable` to clear this warning.
    case _ => error("..");
         ^
exceptions-2.scala:139: warning: This catches all Throwables. If this is really intended, use `case _ : Throwable` to clear this warning.
        case _ => Console.println("Silently ignore exception in finally");
             ^
exceptions-2.scala:157: warning: This catches all Throwables. If this is really intended, use `case _ : Throwable` to clear this warning.
      } catch { case _ => () }
                     ^
exceptions-2.scala:252: warning: This catches all Throwables. If this is really intended, use `case _ : Throwable` to clear this warning.
    case _ => ();
         ^
exceptions-2.scala:267: warning: a pure expression does nothing in statement position; you may be omitting necessary parentheses
    try { 1 } catch { case e: java.io.IOException => () }
          ^
exceptions-2.scala:45: warning: method error in object Predef is deprecated: Use `sys.error(message)` instead
    case _ => error("..");
              ^
exceptions-2.scala:52: warning: method error in object Predef is deprecated: Use `sys.error(message)` instead
      error("nnnnoooo");
      ^
exceptions-2.scala:62: warning: method error in object Predef is deprecated: Use `sys.error(message)` instead
      error("nnnnoooo");
      ^
exceptions-2.scala:137: warning: method error in object Predef is deprecated: Use `sys.error(message)` instead
        error("a");
        ^
9 warnings found
nested1: 
Innermost finally
Outermost finally
nested2: 
Innermost finally
Outermost finally
mixed: 
10
Finally!
withValue1:
Oh, oh
10
withValue2:
droped a null
null
method2:
10
Exception occurred
method3:
Caught an NPE
tryFinallyTry:
Silently ignore exception in finally
valInFinally:
Abc
tryAndValInFinally
Abc
=================
NoExcep.method2:
Hello, world
NoExcep.method3:
method3
NoExcep.method4:
..
Return inside body:
Normal execution...
inner finally
Outer finally
Return inside synchronized body:
Synchronized normal execution...
inner finally
Outer finally
Return inside body and return in finally:
Normal execution...
inner finally
Outer finally
Return inside body and return in finally inside finally:
Normal execution...
inner finally
finally inside finally
Outer finally
Throw in catch and finally:
ABC
Return with finally clause that cleans the stack
Normal execution...
inner finally
Outer finally
